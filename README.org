* mesa-major-mode
This is an Emacs major mode intended for use with the inlists used by
the [[http://mesa.sourceforge.net/][MESA stellar evolution code]].  It is descendant of (and replacement
for) [[https://github.com/jschwab/mesa-minor-mode][mesa-minor-mode]].

It provides syntax highlighting and strictly enforces formatting.

Most importantly, it makes it easy to take advantage of the
[[http://www.gnu.org/software/emacs/manual/html_node/emacs/Tags.html#Tags][tag-related features]] in Emacs while editing MESA inlists.  The default
tag file will include everything in the star_job, controls, pgstar,
binary_job, and binary_controls namelists.

* Installation and Prerequisites
** Install a recent version of emacs
To use the major mode, you must have Emacs 24.X.  I recommend using
the current version, 24.5.

If you are using MESA on a remote system where only older emacs
versions are available, you may want to consider running a newer
version locally and editing your inlists using [[https://www.gnu.org/software/tramp/#Overview][TRAMP]].

** List your installed MESA versions
Create a file named =.mesa_init= in your home directory.  List the
paths to your various MESA versions using [[http://en.wikipedia.org/wiki/INI_file][ini]] format, as below.

#+BEGIN_EXAMPLE
  [r7624]
      MESA_DIR = /path/to/mesa-r7624

  [r6596]
      MESA_DIR = /path/to/mesa-r6596
#+END_EXAMPLE

You can have one or more of these entries.  If you have many MESA
versions, you may want to take a look at [[https://github.com/jschwab/mesa-init][mesa-init]].

** Download mesa-mode
The best way to get mesa-mode is to clone this repository
#+BEGIN_EXAMPLE
  git clone https://github.com/jschwab/mesa-major-mode.git
#+END_EXAMPLE

If you don't want to use git, you can also save the [[https://raw.githubusercontent.com/jschwab/mesa-major-mode/master/mesa-mode.el][raw mesa-mode.el
file]] to your computer.

** Configure emacs 
Make sure that mesa-mode.el is in your load-path and then require it
in your Emacs init file.
#+BEGIN_EXAMPLE
  (add-to-list 'load-path "/home/jschwab/Software/mesa-major-mode/")
  (require 'mesa-mode)
#+END_EXAMPLE

You also want to specify the default version of MESA whose
documentation you want to emacs to use.  Add
#+BEGIN_EXAMPLE
  ;; set default MESA version
  (setq mesa-default-version "r7624")
#+END_EXAMPLE
where "r7624" is the identifier (that you specified earlier in
=~.mesa_init=) of whatever version of MESA you want to be the default.

You can have Emacs edit every file whose name starts with inlist using
this major mode by adding
#+BEGIN_EXAMPLE
  (add-to-list 'auto-mode-alist '("/inlist[^/]*$" . mesa-mode))
#+END_EXAMPLE
to your Emacs init file.

I recommend also opening MESA defaults files with mesa-mode in order
to get the syntax highlighting.  I also recommend using the read-only
view-mode which will prevent you from confusing them with your inlists
and editing them accidentally.
#+BEGIN_EXAMPLE
  (add-to-list 'auto-mode-alist '("\\.defaults\\'" . (lambda () (mesa-mode) (view-mode)))
#+END_EXAMPLE

There is an included =minimal_init.el= file that contains these
commands.

** Caveats
I use this with the latest Emacs release on Linux, so that's where it
is least likely to be broken.  I'm also not much of an elisp hacker,
so you probably shouldn't take anything done here as representative of
the "right way".
* Features and Usage
** Syntax highlighting
This is one of the primary motivations for the major-mode.  The inlist
will be syntax highlighted. By default, the following faces are used.

| Thing                   | Face               |
|-------------------------+--------------------|
| comment                 | comment-face       |
| namelist name           | function-name-face |
| option (key)            | variable-name-face |
| option (value, boolean) | builtin-face       |
| option (value, string)  | string-face        |
| option (value, number)  | constant-face      |

** Quick access to documentation
This is the other primary motivation for the major-mode.

The command =C-c C-d= will open another window and show you to a
variable's definition in the appropriate .defaults file.  This lets
you see the default value and the surrounding documentation.

Emacs has a huge number of searching and completion functions that can
make use of tags.  For example, the command =M-.= will jump you to a
variable's definition in the appropriate .defaults file. =M-*= will
jump you back to your place in the inlist.  Your completion command
=M-/= will also be able to take advantage of tags.  To learn more
about what tags are and what they can do, read the [[http://www.gnu.org/software/emacs/manual/html_node/emacs/Tags.html#Tags][Emacs docs]].

** Constrained editing
The mode provides a number of commands that allow you to edit options
in a particular way.  Using these commands is often quicker and
prevents typos.

Here's a summary table.  More detail is below.

| Key       | Effect                             |
|-----------+------------------------------------|
| =C-c C-c= | Toggle comment status
| =C-c C-e= | Edit option value                  |
| =C-c C-i= | Edit option index                  |
| =C-c C-r= | Reset option to default value      |
| =C-c C-t= | Toggle boolean value               |

*** Toggle comment status
=C-c C-c= will toggle the comment status of lines, regions, etc.
*** Edit option value
=C-c C-e= will replace the value of the option on the current line
with the text entered in the minibuffer.  With a prefix argument
=C-u=, the minibuffer will initially contain the current value.
*** Edit option index
=C-c C-i= will replace the value of array index on the current line
with the text entered in the minibuffer.  With a prefix argument
=C-u=, the minibuffer will initially contain the current value.
*** Reset option to default value
=C-c C-r= will reset an option to its default value (i.e. the one
specified in the MESA .defaults file).
*** Toggle boolean values
=C-c C-t= will switch the option value between =.true.= and =.false.=.
** Strict formatting
mesa-mode gives you very little control over your inlist formatting.
This strictness was inspired by [[https://github.com/mkmcc/athinput-mode][Mike McCourt's athinput-mode]].

When you save the inlist, extraneous whitespace will be stripped and
inlist commands will be indented.

The only part of this that can be customized (unless you're willing to
edit the mode directly) is the string used for the indent.  For
example, if you prefer 4 space indents, you could set

#+BEGIN_EXAMPLE
  (setq mesa-indent-string "    ")
#+END_EXAMPLE

If there are additional formatting aspects that are important, please
write to me or send a pull request.

** MESA version management
Each buffer is initially associated with the default MESA version, but
if you want to switch versions, you can.  The MESA version is
buffer-local, so different buffers can use different MESA versions.
This affects which tags/defaults files will be used.
*** Change MESA version
If you specified multiple MESA versions in your =.mesa_init=, you can
use =C-c C-v= to switch where the minor mode will look for the
defaults files.
*** (Re)generate tags file
If a TAGS file doesn't exist when mesa-mode starts or the version
changes, it will try and create one.  To regenerate the TAGS file (for
example, after you upgrade MESA), use M-x mesa-regen-tags.

